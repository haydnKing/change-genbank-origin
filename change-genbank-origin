#!/usr/bin/python

import argparse, sys, os.path
from Bio import SeqIO, Alphabet

def is_valid_sequence(parser, arg):
	try:
		return SeqIO.read(arg, 'genbank', Alphabet.generic_dna)
	except ValueError as e:
		print('Error while parsing \'{}\': {}'.format(arg, e.message))
		sys.exit(-1)

def get_default_output(input_file, origin):
	(root, ext) = os.path.splitext(input_file)
	return "{}_{}{}".format(root, origin, ext)
	

def change_feature_location(f, origin):


	return f

def main():
	parser = argparse.ArgumentParser(description='Change the origin of a circular	DNA genbank file')
	parser.add_argument('origin', 
											metavar='N', 
											type=int, 
											help="The 1-offset location of the new origin")
	parser.add_argument('input', 
											type = str,
											help = 'The sequence file')
	parser.add_argument('output',
											help = 'File to write to',
											nargs = '?',
											default = None)

	args = parser.parse_args()

	record = open_sequence(args.input)
	origin = args.origin -1
	output = args.output if args.output else get_default_output(args.input,	origin)

	if origin > len(record.seq):
		print('Error: New origin is larger than sequence length')
		sys.exit(-1)

	
	#move sequence
	record.seq = record.seq[origin:] + record.seq[:origin]

	#move features
	record.features = [change_feature_location(f, origin) for f in record.features]



if __name__=='__main__':
	main()

